#!/usr/bin/env bash
#
# Copyright (c) 2014, Joyent, Inc. All rights reserved.
#
# Generate config.json for running multi-server integration tests.

if [ "$TRACE" != "" ]; then
    export PS4='${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
    set -o xtrace
fi

set -o errexit
set -o pipefail



#---- support functions

function fatal
{
    echo "$(basename $0): fatal error: $*"
    exit 1
}



#---- mainline

dir=$(unset CDPATH; cd $(dirname $0); pwd)
test_dir=$(unset CDPATH; cd $(dirname $0)/..; pwd)
json_file=${test_dir}/config.json
vmapi_url=$(json -f /opt/smartdc/fwapi/config.json vmapi.url)
imgapi_url=${vmapi_url//vmapi/imgapi}
cnapi_url=${vmapi_url//vmapi/cnapi}

image_uuid=$(curl -sS ${imgapi_url}/images'?name=sdc-smartos' | json 0.uuid)
[[ -z ${image_uuid} ]] && fatal "Could not find an image named sdc-smartos in IMGAPI"


servers=( $(curl -sS ${cnapi_url}/servers | json -a uuid setup | grep true | awk '{ print $1 }' | head -n 2) )

[[ -z ${servers[0]} ]] && fatal "Could not get server1 from CNAPI"
[[ -z ${servers[1]} ]] && fatal "Could not get server2 from CNAPI"

${dir}/add-test-user

echo "Writing multi-server test config: ${json_file}"
cat - >${json_file} <<JSON
{
  "provision_image": "${image_uuid}",
  "owner_uuid": "4917d426-2097-42f7-9303-b1968cd7bb3e",
  "server1_uuid": "${servers[0]}",
  "server2_uuid": "${servers[1]}"
}
JSON
